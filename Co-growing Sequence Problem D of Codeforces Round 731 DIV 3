//Problem Link:https://codeforces.com/contest/1547/problem/D
//Soln Link:https://codeforces.com/contest/1547/submission/122239124


#include<bits/stdc++.h>
using namespace std;
#define ll long long
#define ld long double
#define ull unsigned long long
#define pb push_back
#define pp pop_back
#define pi pair<ll,ll>
#define pii pair<int,int>
ll mod=1e9+7;

//suppose a[i]=7 and a[i+1]=2 so,a[i]=0111,a[i+1]=0010
//now we need to make 1 in those bit of a[i+1] where a[i]'s that bit was 1
//here in the above example we need to make the third and the first bit 1 as in a[i+1] they are 0
//we know that ,x^x=0 x^0=x
//we need to perform x_or(^) operation to materialize that
//and again we need a lexicographically minimum sequence
//so to make those bit (3rd and 1st) 1,a[i+1]^z=Y ,where all the bits which have 1 in the previous are 1 in the present
//so to make those bit 1,here we are supposed to do a X_OR operation and we have to perform that X_OR operation with minimum possible value
//so,the bits which were previously 1 ,but now 0 in a[i],we need to make them 1
//To make them 1,we need to do find the pow(2,position) of those value and add them with each other
//here in the above example,we need to make the 1st and 3rd bit 1
//so pow(2,0)+pow(2,2)=5
//so we have to do 2 X_OR 5 -->(2^5) to make those bit equal to 1
//This is how we can get the minimum value to do X_OR operation with that will make the sequence GROWING



int main(){
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    //freopen("input.txt","r",stdin);
    //freopen("output.txt","w",stdout);
    ll n,i,j,k,l,m,b,t,sum,sum1,flag,max1,min1,tmp;

    cin>>t;
    while(t--){
        cin>>n;
        ll a[n+1];
        for(i=1;i<=n;i++){
            cin>>a[i];
        }
        string s,ss;
        i=1;
        cout<<0<<" ";
        vector<ll>v,vv;

        k=a[1];
        ll aa[33];j=1;
        memset(aa,0,sizeof(aa));
        while(1){
            l=k%2;
            k/=2;
            aa[j]=l;
            j++;
            v.pb(l);
            if(k==0){
                break;
            }
        }

        ll aaa[33];
        ll ii=2;
        while(ii<=n){
            memset(aaa,0,sizeof(aaa));
            j=1;
            while(a[ii]>0){
                l=a[ii]%2;
                aaa[j]=l;
                j++;
                a[ii]/=2;

            }
            ll d=1;sum=0;
            for(i=1;i<=32;i++){
                if(aa[i]==1 and aaa[i]==0){
                    sum+=d;
                }
                d*=2;
                if(aaa[i]==1 and aa[i]==0){
                    aa[i]=1;
                }
            }
            cout<<sum<<" ";
            ii++;
            if(ii==n+1){
                break;
            }

        }
        cout<<endl;


    }




}

